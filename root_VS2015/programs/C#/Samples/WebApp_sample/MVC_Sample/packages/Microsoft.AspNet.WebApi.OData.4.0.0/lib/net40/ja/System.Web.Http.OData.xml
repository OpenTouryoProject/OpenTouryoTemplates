<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.OData</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ODataHttpRequestMessageExtensions">
      <summary>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> クラスの拡張メソッドを提供します。</summary>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.CreateODataErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.Data.OData.ODataError)">
      <summary> コンテンツ ネゴシエーションを実行し、エラーを表す <see cref="T:System.Net.Http.HttpResponseMessage" /> と、コンテンツとして oDataError をラップする &lt;see cref="T:System.Net.Http.ObjectContent`1" /&gt; のインスタンスを作成するヘルパー メソッド。フォーマッタが見つからなかった場合は、このメソッドはステータス 406 NotAcceptable の応答を返します。</summary>
      <returns>ステータス コード statusCode で oDataError をラップするエラー応答。</returns>
      <param name="request">要求。</param>
      <param name="statusCode">作成された応答のステータス コード。</param>
      <param name="oDataError">ラップする OData エラー。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetEdmModel(System.Net.Http.HttpRequestMessage)">
      <summary> 要求に関連付けられている EDM モデルを取得します。</summary>
      <returns>この要求に関連付けられている EDM モデル。ない場合は null。</returns>
      <param name="request">要求。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetInlineCount(System.Net.Http.HttpRequestMessage)">
      <summary> OData 応答に使用するインライン カウントを取得します。</summary>
      <returns>返信するインライン カウント。設定されていない場合は null。</returns>
      <param name="request">要求。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetNextPageLink(System.Net.Http.HttpRequestMessage)">
      <summary> OData 応答に使用する次ページ リンクを取得します。</summary>
      <returns>返信する次ページ リンク。設定されていない場合は null。</returns>
      <param name="request">要求。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPath(System.Net.Http.HttpRequestMessage)">
      <summary> 要求の OData パスを取得します。</summary>
      <returns>要求の OData パス。</returns>
      <param name="request">要求。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPathHandler(System.Net.Http.HttpRequestMessage)">
      <summary> リンクの生成に使用する <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> を取得します。</summary>
      <returns>リンクの生成に使用する <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />。</returns>
      <param name="request">要求。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRouteName(System.Net.Http.HttpRequestMessage)">
      <summary> OData リンクの生成に使用するルート名を取得します。</summary>
      <returns>この要求に関連付ける OData リンクの生成に使用するルート名。ない場合は null。</returns>
      <param name="request">要求。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRoutingConventions(System.Net.Http.HttpRequestMessage)">
      <summary> コントローラーとアクションの選択に使用する OData ルーティング規約を取得します。</summary>
      <returns>この要求に関連付けるコントローラーとアクションの選択に使用する OData ルーティング規約。ない場合は null。</returns>
      <param name="request">要求。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetEdmModel(System.Net.Http.HttpRequestMessage,Microsoft.Data.Edm.IEdmModel)">
      <summary> 指定した EDM モデルを要求に関連付けます。</summary>
      <param name="request">要求。</param>
      <param name="model">要求に関連付ける EDM モデル。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetInlineCount(System.Net.Http.HttpRequestMessage,System.Int64)">
      <summary> OData 応答に使用するインライン カウントを設定します。</summary>
      <param name="request">要求。</param>
      <param name="inlineCount">クライアントに返信するインライン カウント。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetNextPageLink(System.Net.Http.HttpRequestMessage,System.Uri)">
      <summary> OData 応答に使用する次ページ リンクを設定します。</summary>
      <param name="request">要求。</param>
      <param name="nextPageLink">クライアントに返信する次ページ リンク。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPath(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.ODataPath)">
      <summary> 要求の OData パスを設定します。</summary>
      <param name="request">要求。</param>
      <param name="odataPath">要求の OData パス。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPathHandler(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.IODataPathHandler)">
      <summary> リンクの生成に使用する <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> を設定します。</summary>
      <param name="request">要求。</param>
      <param name="pathHandler">リンクの生成に使用する <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRouteName(System.Net.Http.HttpRequestMessage,System.String)">
      <summary> OData リンクの生成に使用する特定のルート名を取得します。</summary>
      <param name="request">要求。</param>
      <param name="routeName">OData リンクの生成に使用するルート名。</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRoutingConventions(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary> コントローラーとアクションの選択に使用する OData ルーティング規約を設定します。</summary>
      <param name="request">要求。</param>
      <param name="routingConventions">コントローラーおよびアクションの選択に使用する OData ルーティング規則。</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpConfigurationExtensions"></member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration)">
      <summary>戻り値の型が <see cref="T:System.Linq.IQueryable" /> または <see cref="T:System.Linq.IQueryable`1" /> であるアクションに対するクエリ サポートを有効にします。予期しないクエリまたは悪意のあるクエリの処理を避けるため、<see cref="T:System.Web.Http.QueryableAttribute" /> の検証設定を使用して受信するクエリを検証します。詳細については、「http://go.microsoft.com/fwlink/?LinkId=279712」を参照してください。</summary>
      <param name="configuration">サーバー構成。</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
      <summary>戻り値の型が <see cref="T:System.Linq.IQueryable" /> または <see cref="T:System.Linq.IQueryable`1" /> であるアクションに対するクエリ サポートを有効にします。. 予期しないクエリまたは悪意のあるクエリの処理を避けるため、<see cref="T:System.Web.Http.QueryableAttribute" /> の検証設定を使用して受信するクエリを検証します。詳細については、「http://go.microsoft.com/fwlink/?LinkId=279712」を参照してください。</summary>
      <param name="configuration">サーバー構成。</param>
      <param name="queryFilter">クエリを実行するアクション フィルター。</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpErrorExtensions">
      <summary>
        <see cref="T:System.Web.Http.HttpError" /> クラスの拡張メソッドを提供します。</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpErrorExtensions.ToODataError(System.Web.Http.HttpError)">
      <summary>
        <paramref name="httpError" /> を <see cref="T:Microsoft.Data.OData.ODataError" /> に変換します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.OData.ODataError" /> を返します。</returns>
      <param name="httpError">変換する <see cref="T:System.Web.Http.HttpError" /> インスタンス。</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpRouteCollectionExtensions">
      <summary>
        <see cref="T:System.Web.Http.HttpRouteCollection" /> クラスの拡張メソッドを提供します。</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel)">
      <summary>ルートのプレフィックスは含まず、既定の OData ルート名は含む、指定された OData ルートをマップします。</summary>
      <param name="routes">アプリケーションのルートのコレクション。</param>
      <param name="routeName">マップするルートの名前。</param>
      <param name="routePrefix">OData ルートのパス テンプレートに追加するプレフィックス。</param>
      <param name="model">OData パスの解析に使用する EDM モデル。</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <param name="routes">アプリケーションのルートのコレクション。</param>
      <param name="routeName">マップするルートの名前。</param>
      <param name="routePrefix">OData ルートのパス テンプレートに追加するプレフィックス。</param>
      <param name="model">OData パスの解析に使用する EDM モデル。</param>
      <param name="pathHandler">OData パスの解析に使用する <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" />。</param>
      <param name="routingConventions">コントローラーおよびアクションの選択に使用する OData ルーティング規則。</param>
    </member>
    <member name="T:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> クラスの拡張メソッドを提供します。</summary>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.AddRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>指定されたコレクションの要素を <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> の最後に追加します。</summary>
      <param name="collection">アイテムを追加するコレクション。</param>
      <param name="items">
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> の最後に追加する必要のあるアイテム。アイテム コレクション自体を null にすることはできませんが、含まれる要素は null であってもかまいません。</param>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.InsertRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Int32,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>  コレクションの要素を <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> の指定されたインデックス位置に挿入します。</summary>
      <param name="collection">アイテムを追加するコレクション。</param>
      <param name="index">新しい要素を挿入する位置の 0 から始まるインデックス。</param>
      <param name="items">
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> の最後に追加する必要のあるアイテム。アイテム コレクション自体を null にすることはできませんが、含まれる要素は null であってもかまいません。</param>
    </member>
    <member name="T:System.Web.Http.ODataUrlHelperExtensions">
      <summary>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> クラスの拡張メソッドを提供します。</summary>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>OData リンクを生成します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
      <param name="urlHelper">URL ヘルパー。</param>
      <param name="segments">OData パス セグメント</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.String,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>要求の OData ルート名とパス ハンドラーを使用して、OData リンクを生成します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
      <param name="urlHelper">URL ヘルパー。</param>
      <param name="routeName">OData ルートの名前。</param>
      <param name="pathHandler">リンクの生成に使用するパス ハンドラー。</param>
      <param name="segments">OData パス セグメント</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>OData リンクを生成します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
      <param name="urlHelper">URL ヘルパー。</param>
      <param name="segments">OData パス セグメント</param>
    </member>
    <member name="T:System.Web.Http.QueryableAttribute">
      <summary>このクラスでは、OData クエリ構文を使用するクエリを有効にするためにアクションに適用できる属性が定義されています。予期しないクエリまたは悪意のあるクエリの処理を避けるため、<see cref="T:System.Web.Http.QueryableAttribute" /> の検証設定を使用して受信するクエリを検証します。詳細については、「http://go.microsoft.com/fwlink/?LinkId=279712」を参照してください。</summary>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.#ctor">
      <summary>コントローラー アクションで OData クエリ パラメーターをサポートできるようにします。</summary>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedArithmeticOperators">
      <summary>add、sub、mul、div、mod などの許可されている算術演算子のリストを表す列挙を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.AllowedArithmeticOperators" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedFunctions">
      <summary>$filter クエリで使用することが許可されている関数のリストを表す列挙を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.AllowedFunctions" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedLogicalOperators">
      <summary>eq、ne、gt、ge、lt、le、and、or、not などの許可されている論理演算子のリストを表す列挙を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.AllowedLogicalOperators" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedOrderByProperties">
      <summary>プロパティ名のコンマ区切りリストの文字列を取得または設定します。クエリ可能な結果は、このリストで定義されているプロパティによってのみ並べ替えることができます。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedQueryOptions">
      <summary>許可された内部クエリであるクエリ パラメーターを取得または設定します。既定値は、$filter、$skip、$top、$orderby、$expand、$select、$inlineCount、$format、$skipToken などのすべてのクエリ オプションです。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.AllowedQueryOptions" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>URI から受信したクエリおよびクエリの設定に基づいて、特定の IQueryable にクエリを適用します。</summary>
      <returns>
        <see cref="T:System.Linq.IQueryable" /> を返します。</returns>
      <param name="queryable">応答メッセージからの、元のクエリ可能なインスタンス。</param>
      <param name="queryOptions">受信した要求に基づいて作成された &lt;see cref="T:System.Web.Http.OData.Query.ODataQueryOptions"/&gt; インスタンス。</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnableConstantParameterization">
      <summary>定数をパラメーター化する必要があるかどうかを示す値を取得または設定します。定数をパラメーター化すると、Entity Framework でのパフォーマンスが向上します。</summary>
      <returns>既定値は、true です。</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnsureStableOrdering">
      <summary>安定した並べ替え順序を保証するために必要なときは、クエリの構成で元のクエリを変更する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>値 true は、安定した並べ替え順序を保証する必要があるときは元のクエリを変更する必要があることを示します。値 false は、クエリを変更しなくても並べ替え順序は安定していると見なせることを示します。安定した並べ替え順序を保証するクエリ プロバイダーでは、この値を false に設定する必要があります。既定値は、true です。</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.GetModel(System.Type,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>特定の型および要求の EDM モデルを取得します。</summary>
      <returns>特定の型および要求の EDM モデル。</returns>
      <param name="elementClrType">モデルを取得する CLR 型。</param>
      <param name="request">モデルを取得する要求メッセージ。</param>
      <param name="actionDescriptor">クエリ対象のアクションのアクション記述子。</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.HandleNullPropagation">
      <summary>クエリの構成の間に null の伝達を処理する方法を示す値を取得または設定します。</summary>
      <returns>既定値は、<see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" /> です。</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxAnyAllExpressionDepth">
      <summary>クエリの内部に入れ子にされる任意またはすべての要素の最大の深さを取得または設定します。</summary>
      <returns>クエリの内部に入れ子にされる任意またはすべての要素の最大の深さ。</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxNodeCount">
      <summary>$filter 構文ツリー内のノードの最大数を取得または設定します。</summary>
      <returns>  既定値は 100 です。</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxSkip">
      <summary>クライアントが要求できる $skip の最大値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxTop">
      <summary>クライアントが要求できる $top の最大値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>アクションが実行された後で、クエリの構成を行います。最初に、返される応答メッセージから IQueryable の取得を試みます。次に、QueryableAttribute での検証設定に基づいて、URI からのクエリを検証します。最後に、クエリを適切に適用し、応答メッセージでリセットして戻します。</summary>
      <param name="actionExecutedContext">応答メッセージ、要求メッセージ、HttpConfiguration など、このアクションに関係するコンテキスト。</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.PageSize">
      <summary>クライアントに返送するクエリ結果の最大数を取得または設定します。</summary>
      <returns>  クライアントに返送するクエリ結果の最大数。</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ValidateQuery(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>受信した要求の OData クエリを検証します。</summary>
      <param name="request">受信した要求。</param>
      <param name="queryOptions">受信した要求に基づいて作成された <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> インスタンス。</param>
    </member>
    <member name="T:System.Web.Http.OData.AsyncEntitySetController`2">
      <summary>OData エンティティ セットを公開するコントローラーに対する便利な開始点を提供します。これは <see cref="T:System.Web.Http.OData.AsyncEntitySetController" /> の同期バージョンです。</summary>
      <typeparam name="TEntity">公開されるエンティティ セットのエンティティ型に関連付けられる型。</typeparam>
      <typeparam name="TKey">公開されるエンティティ セットのエンティティ型のエンティティ キーに関連付けられる型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" /> の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateEntityAsync(`0)">
      <summary>エンティティ セットに新しいエンティティを作成するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>作成されたエンティティ。</returns>
      <param name="entity">エンティティ セットに追加するエンティティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>2 つのエンティティの間にリンクの作成を試みる POST および PUT 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> を返します。</returns>
      <param name="key">ナビゲーション プロパティを持つエンティティのキー。</param>
      <param name="navigationProperty">ナビゲーション プロパティの名前。</param>
      <param name="link">リンクするエンティティの URI。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Delete(`1)">
      <summary>エンティティ セットから既存のエンティティを削除するための DELETE 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> を返します。</returns>
      <param name="key">削除するエンティティのエンティティ キー。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>2 つのエンティティの間の関係の切断を試みる DELETE 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> を返します。</returns>
      <param name="key">ナビゲーション プロパティを持つエンティティのキー。</param>
      <param name="relatedKey">関連付けられているエンティティのキー。</param>
      <param name="navigationProperty">ナビゲーション プロパティの名前。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>  2 つのエンティティの間の関係の切断を試みる DELETE 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> を返します。</returns>
      <param name="key">ナビゲーション プロパティを持つエンティティのキー。</param>
      <param name="navigationProperty">ナビゲーション プロパティの名前。</param>
      <param name="link">ナビゲーション プロパティから削除するエンティティの URI。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get">
      <summary>エンティティ セットからのエンティティの取得を試みる GET 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>エンティティ セットの一致するエンティティ。</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get(`1)">
      <summary>キーによってエンティティ セットから個別エンティティの取得を試みる GET 要求を処理します。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="key">取得するエンティティのエンティティ キー。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetEntityByKeyAsync(`1)">
      <summary>  キーによってエンティティ セットからエンティティを取得するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>取得されたエンティティ。または、指定されたエンティティ キーを持つエンティティがエンティティ セットに見つからない場合は null。</returns>
      <param name="key">取得するエンティティのエンティティ キー。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetKey(`0)">
      <summary>指定されたエンティティのエンティティ キーを取得するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>エンティティ キーの値。</returns>
      <param name="entity">エンティティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>   マップされていないすべての OData 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="odataPath">要求の OData パス。</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.ODataPath">
      <summary>現在の要求の OData パスを取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>エンティティ セット内の単一のエンティティを部分的に更新する PATCH および MERGE 要求を処理します。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="key">更新するエンティティのエンティティ キー。</param>
      <param name="patch">部分的な更新を表すパッチ。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.PatchEntityAsync(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   エンティティ セット内の既存のエンティティに部分的な更新を適用するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</returns>
      <param name="key">更新するエンティティのエンティティ キー。</param>
      <param name="patch">部分的な更新を表すパッチ。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Post(`0)">
      <summary>エンティティ セット内に新しいエンティティを作成する POST 要求を処理します。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="entity">エンティティ セットに挿入するエンティティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Put(`1,`0)">
      <summary>  エンティティ セット内の単一のエンティティの置換を試みる PUT 要求を処理します。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="key">置換するエンティティのエンティティ キー。</param>
      <param name="update">更新されたエンティティ。</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.QueryOptions">
      <summary>現在の要求の OData クエリ オプションを取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.UpdateEntityAsync(`1,`0)">
      <summary>エンティティ セット内の既存のエンティティを更新するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>更新されたエンティティ。</returns>
      <param name="key">更新するエンティティのエンティティ キー。</param>
      <param name="update">更新されたエンティティ。</param>
    </member>
    <member name="T:System.Web.Http.OData.ClrTypeAnnotation">
      <summary>Represents a mapping from an <see cref="T:Microsoft.Data.Edm.IEdmType" /> to a CLR type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ClrTypeAnnotation.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.ClrTypeAnnotation" /> class.</summary>
      <param name="clrType">The backing CLR type for the EDM type.</param>
    </member>
    <member name="P:System.Web.Http.OData.ClrTypeAnnotation.ClrType">
      <summary>The backing CLR type for the EDM type.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Delta`1">
      <summary>特定の <paramref name="TEntityType" /> に対する変更 (つまりデルタ) を追跡するクラス。</summary>
      <typeparam name="TEntityType">TEntityType は、このデルタが変更を追跡するエンティティの基本型です。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Delta`1" /> の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Web.Http.OData.Delta`1" /> の新しいインスタンスを初期化します。</summary>
      <param name="entityType">変更を追跡する派生エンティティ型。<paramref name="entityType" /> は <paramref name="TEntityType" /> のインスタンスに割り当てることができる必要があります。</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Clear">
      <summary>デルタをクリアし、基になっているエンティティをリセットします。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyChangedValues(`0)">
      <summary>変更されたプロパティ値を基になっているエンティティ (<see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> でアクセス可能) から <paramref name="original" /> エンティティにコピーします。</summary>
      <param name="original">更新するエンティティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyUnchangedValues(`0)">
      <summary>変更されていないプロパティ値を基になっているエンティティ (<see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> でアクセス可能) から <paramref name="original" /> エンティティにコピーします。</summary>
      <param name="original">更新するエンティティ。</param>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.EntityType">
      <summary>  変更を追跡するエンティティの実際の型。</summary>
      <returns>
        <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetChangedPropertyNames">
      <summary>このデルタによって変更されたプロパティを、プロパティ名の列挙として返します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetEntity">
      <summary>このデルタによって追跡されているすべての変更 (および元の値) を保持している <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> インスタンスを返します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetUnchangedPropertyNames">
      <summary>  このデルタによって変更されていないプロパティを、プロパティ名の列挙として返します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Patch(`0)">
      <summary>
        <paramref name="original" /> エンティティをこのデルタによって追跡されている変更で上書きします。</summary>
      <param name="original">更新するエンティティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Put(`0)">
      <summary>
        <paramref name="original" /> エンティティをこのデルタに格納されている値で上書きします。</summary>
      <param name="original">更新するエンティティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>DynamicObject TryGetMember メソッドをオーバーライドし、<see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> のプロパティだけを取得できるようにします。</summary>
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyType(System.String,System.Type@)">
      <summary>基になるエンティティから <paramref name="name" /> という名前のプロパティの <see cref="T:System.Type" /> の取得を試みます。</summary>
      <returns>プロパティが見つかった場合は true。それ以外の場合は false。</returns>
      <param name="name">プロパティの名前。</param>
      <param name="type">プロパティの型。</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
      <summary>基になるエンティティから <paramref name="name" /> という名前のプロパティの値の取得を試みます。</summary>
      <returns>プロパティが見つかった場合は true。</returns>
      <param name="name">プロパティの名前。</param>
      <param name="value">プロパティの値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>DynamicObject TrySetMember メソッドをオーバーライドし、<see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> のプロパティだけを設定できるようにします。</summary>
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetPropertyValue(System.String,System.Object)">
      <summary>
        <paramref name="name" /> という名前のプロパティへの指定された <paramref name="value" /> の設定を試みます。</summary>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
      <param name="name">プロパティの名前。</param>
      <param name="value">プロパティの新しい値。</param>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext">
      <summary>
        <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> のインスタンスを自己リンク (<see cref="M:EntitySetConfiguration.HasIdLink" />、<see cref="M:EntitySetConfiguration.HasEditLink" />、<see cref="M:EntitySetConfiguration.HasReadLink" />) およびナビゲーション リンク (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />、<see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />) のビルダーに渡し、リンクを生成するためにリンク ビルダーで使用できます。</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmModel">
      <summary>
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> を取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityInstance">
      <summary>このエンティティ インスタンスの値を取得します。</summary>
      <returns>
        <see cref="T:System.Object" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntitySet">
      <summary>このインスタンスが属している <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> を取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityType">
      <summary>このエンティティ インスタンスの <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> を取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Request">
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
      <summary>ActionAvailabilityChecks を実行する必要があるかどうかを取得します。これは、リンクを含める前にアクションの可用性をチェックするかどうかをフォーマッタに通知するために使用されます。フィード内のときは、このチェックをスキップします。</summary>
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Url">
      <returns>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext`1">
      <summary>
        <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> のインスタンスを自己リンク (<see cref="M:EntitySetConfiguration.HasIdLink" />、<see cref="M:EntitySetConfiguration.HasEditLink" />、<see cref="M:EntitySetConfiguration.HasReadLink" />) およびナビゲーション リンク (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />、<see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />) のビルダーに渡し、リンクを生成するためにリンク ビルダーで使用できます。</summary>
      <typeparam name="TEntityType">エンティティの型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext`1.#ctor"></member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext`1.EntityInstance"></member>
    <member name="T:System.Web.Http.OData.EntitySetController`2">
      <summary>OData エンティティ セットを公開するコントローラーに対する便利な開始点を提供します。これは <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" /> の同期バージョンです。</summary>
      <typeparam name="TEntity">公開されるエンティティ セットのエンティティ型に関連付けられる型。</typeparam>
      <typeparam name="TKey">公開されるエンティティ セットのエンティティ型のエンティティ キーに関連付けられる型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.#ctor"></member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateEntity(`0)">
      <summary>  エンティティ セットに新しいエンティティを作成するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>作成されたエンティティ。</returns>
      <param name="entity">エンティティ セットに追加するエンティティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>2 つのエンティティの間にリンクの作成を試みる POST および PUT 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <param name="key">ナビゲーション プロパティを持つエンティティのキー。</param>
      <param name="navigationProperty">ナビゲーション プロパティの名前。</param>
      <param name="link">リンクするエンティティの URI。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Delete(`1)">
      <summary>   エンティティ セットから既存のエンティティを削除するための DELETE 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <param name="key">削除するエンティティのエンティティ キー。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>2 つのエンティティの間の関係の切断を試みる DELETE 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <param name="key">ナビゲーション プロパティを持つエンティティのキー。</param>
      <param name="relatedKey">関連付けられているエンティティのキー。</param>
      <param name="navigationProperty">ナビゲーション プロパティの名前。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>  2 つのエンティティの間の関係の切断を試みる DELETE 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <param name="key">ナビゲーション プロパティを持つエンティティのキー。</param>
      <param name="navigationProperty">ナビゲーション プロパティの名前。</param>
      <param name="link">ナビゲーション プロパティから削除するエンティティの URI。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get">
      <summary>エンティティ セットからのエンティティの取得を試みる GET 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>エンティティ セットの一致するエンティティ。</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get(`1)">
      <summary>キーによってエンティティ セットから個別エンティティの取得を試みる GET 要求を処理します。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="key">取得するエンティティのエンティティ キー。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetEntityByKey(`1)">
      <summary>キーによってエンティティ セットからエンティティを取得するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>取得されたエンティティ。または、指定されたエンティティ キーを持つエンティティがエンティティ セットに見つからない場合は null。</returns>
      <param name="key">取得するエンティティのエンティティ キー。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetKey(`0)">
      <summary>指定されたエンティティのエンティティ キーを取得するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>エンティティ キーの値。</returns>
      <param name="entity">エンティティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>マップされていないすべての OData 要求を処理するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="odataPath">要求の OData パス。</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.ODataPath">
      <summary>現在の要求の OData パスを取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   エンティティ セット内の単一のエンティティを部分的に更新する PATCH および MERGE 要求を処理します。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="key">更新するエンティティのエンティティ キー。</param>
      <param name="patch">部分的な更新を表すパッチ。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.PatchEntity(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   エンティティ セット内の既存のエンティティに部分的な更新を適用するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>更新されたエンティティ。</returns>
      <param name="key">更新するエンティティのエンティティ キー。</param>
      <param name="patch">部分的な更新を表すパッチ。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Post(`0)">
      <summary>エンティティ セット内に新しいエンティティを作成する POST 要求を処理します。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="entity">エンティティ セットに挿入するエンティティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Put(`1,`0)">
      <summary>エンティティ セット内の単一のエンティティの置換を試みる PUT 要求を処理します。</summary>
      <returns>クライアントに返送する応答メッセージ。</returns>
      <param name="key">置換するエンティティのエンティティ キー。</param>
      <param name="update">更新されたエンティティ。</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.QueryOptions">
      <summary>  現在の要求の OData クエリ オプションを取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.UpdateEntity(`1,`0)">
      <summary>   エンティティ セット内の既存のエンティティを更新するには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>更新されたエンティティ。</returns>
      <param name="key">更新するエンティティのエンティティ キー。</param>
      <param name="update">更新されたエンティティ。</param>
    </member>
    <member name="T:System.Web.Http.OData.FeedContext">
      <summary>現在シリアル化されているフィードに関するコンテキスト情報を格納します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.FeedContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.FeedContext.EntitySet">
      <summary>このインスタンスが属している <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.FeedInstance">
      <summary>このフィードのインスタンスの値を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.Request"></member>
    <member name="P:System.Web.Http.OData.FeedContext.Url"></member>
    <member name="T:System.Web.Http.OData.FromODataUriAttribute">
      <summary>OData 規則を使用して URI パラメーターをバインドできる <see cref="T:System.Web.Http.ParameterBindingAttribute" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>パラメーターのバインディングを取得します。</summary>
      <returns>バインディングを格納している <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />。</returns>
      <param name="parameter">バインドするパラメーター。</param>
    </member>
    <member name="T:System.Web.Http.OData.IDelta">
      <summary>オブジェクトの変更を可能にして追跡します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.Clear">
      <summary>
        <see cref="T:System.Web.Http.OData.IDelta" /> をクリアします。</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetChangedPropertyNames">
      <summary>この IDelta によって変更されたプロパティを、プロパティ名の列挙子として返します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetUnchangedPropertyNames">
      <summary>この IDelta によって変更されなかったプロパティを、プロパティ名の列挙子として返します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
      <summary>基になるエンティティから <paramref name="name" /> という名前のプロパティの <see cref="T:System.Type" /> の取得を試みます。</summary>
      <returns>プロパティが見つかった場合は true を返し、見つからなかった場合は false を返します。</returns>
      <param name="name">プロパティの名前。</param>
      <param name="type">プロパティの型。</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>基になるエンティティから <paramref name="name" /> という名前のプロパティの値の取得を試みます。</summary>
      <returns>プロパティが見つかった場合は true を返し、見つからなかった場合は false を返します。</returns>
      <param name="name">プロパティの名前。</param>
      <param name="value">プロパティの値。</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
      <summary>
        <paramref name="name" /> という名前のプロパティへの指定された <paramref name="value" /> の設定を試みます。</summary>
      <returns>成功した場合は true を返し、失敗した場合は false を返します。</returns>
      <param name="name">プロパティの名前。</param>
      <param name="value">プロパティの新しい値。</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataActionParameters">
      <summary>ActionPayload は、クライアントが特定のアクションを呼び出すために POST 要求で提供したパラメーターの名前と値を保持しています。パラメーターの値は、パラメーターの名前をキーとして使用してディクショナリに格納されます。</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataActionParameters.#ctor"></member>
    <member name="T:System.Web.Http.OData.ODataController">
      <summary>OData 形式を使用するデータの読み取りと書き込みをサポートする OData コントローラーの基本クラスを定義します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.#ctor"></member>
    <member name="T:System.Web.Http.OData.ODataFormattingAttribute">
      <summary>     コントローラーに配置される、OData フォーマッタを有効にする属性。</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>このコントローラー記述子のコントローラーごとのオーバーライドを設定するために呼び出されるコールバック。</summary>
      <param name="controllerSettings">初期化するコントローラー設定。</param>
      <param name="controllerDescriptor">コントローラー記述子。<see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> が継承されている場合は、<see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> を、派生したコントローラーの種類に関連付けることができます。</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataMetadataController">
      <summary>Represents an <see cref="T:System.Web.Http.ApiController" /> for generating OData servicedoc and metadata document ($metadata).</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetMetadata">
      <summary>Generates the OData $metadata document.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> representing $metadata.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetServiceDocument">
      <summary>Generates the OData service document.</summary>
      <returns>The service document for the service.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryContext">
      <summary>クエリの構成を実行するために使用されるコンテキスト情報を定義します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type)">
      <summary>
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> および要素の CLR 型で <see cref="T:System.Web.Http.OData.ODataQueryContext" /> のインスタンスを作成します。</summary>
      <param name="model">特定の <paramref name="elementClrType" /> に対応する <see cref="T:Microsoft.Data.Edm.IEdmType" /> を含む EdmModel。</param>
      <param name="elementClrType">クエリ対象のコレクションの要素の CLR 型。</param>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementClrType">
      <summary>要素の CLR 型を取得します。</summary>
      <returns>
        <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementType">
      <summary>   要素の <see cref="T:Microsoft.Data.Edm.IEdmType" /> を取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmType" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.Model">
      <summary>EntitySet が含まれる特定の <see cref="T:Microsoft.Data.Edm.IEdmModel" /> を取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryParameterBindingAttribute">
      <summary>A <see cref="T:System.Web.Http.ParameterBindingAttribute" /> to bind parameters of type <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> to the OData query from the incoming request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)"></member>
    <member name="T:System.Web.Http.OData.ODataRoutingAttribute">
      <summary>ルーティング規則に基づいて OData アクションを選択できるようにするために使用できるコントローラー レベルの属性を定義します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>  このコントローラー記述子のコントローラーごとのオーバーライドを設定するために呼び出されるコールバック。</summary>
      <param name="controllerSettings">初期化するコントローラー設定。</param>
      <param name="controllerDescriptor">コントローラー記述子。<see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> が継承されている場合は、<see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> を、派生したコントローラーの種類に関連付けることができます。</param>
    </member>
    <member name="T:System.Web.Http.OData.PageResult">
      <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
    </member>
    <member name="M:System.Web.Http.OData.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.PageResult" /> class.</summary>
      <param name="nextPageLink">The link for the next page of items in the feed.</param>
      <param name="count">The total count of items in the feed.</param>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.Count">
      <summary>Gets the total count of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.NextPageLink">
      <summary>Gets the link for the next page of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.PageResult`1">
      <summary>PageResult は、OData 形式がサポートする追加情報を含むエンティティのフィードです。現在は、サーバーで一致するすべてのエンティティの数 ($inlinecount=allpages を使用して要求されます)、結果の次のページを取得するための NextLink (サーバーがサーバー主導のページ移動を適用する場合に追加されます) に限定されます。</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
      <summary>結果の部分的なセットを作成します。サーバー主導のページ移動が有効なときに使用されます。</summary>
      <param name="items">このページでシリアル化する必要のある一致結果のサブセット。</param>
      <param name="nextPageLink">一致結果の次のページへのリンク (さらにある場合)。</param>
      <param name="count">クライアントがサーバー上の一致数を知ることができるようにする、一致結果の総数。</param>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.GetEnumerator">
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult`1.Items">
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionConfiguration">
      <summary> ActionConfiguration は、サービスを介して公開する OData アクションを表します。ActionConfigurations は、&lt;FunctionImport /&gt; 要素として $metadata を介して公開されます。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.AddParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary> 新しい非バインディング型パラメーターを追加します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.BindingParameter">
      <summary> bindingParameter を取得します。Null は、アクションに bindingParameter がないことを示します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.CollectionParameter``1(System.String)">
      <summary> 新しい非バインディング型コレクション パラメーターを追加します。</summary>
      <typeparam name="TElementType"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.FollowsConventions"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink">
      <summary> 現在登録されているアクション リンク ファクトリを取得します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.HasActionLink(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)"></member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsAlwaysBindable">
      <summary> このアクションを常にバインドできるかどうかを示します。たとえば、Movie にバインドできる Watch アクションがあるとします。IsAlwaysBindable が false を返す場合、ムービーを見ることができないことがあります。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsBindable"></member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Kind"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Parameter``1(System.String)">
      <summary> 新しい非バインディング型パラメーターを追加します。</summary>
      <typeparam name="TParameter"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Parameters"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Returns``1">
      <summary> アクションの戻り値の型を設定します。戻り値の型が単一の Primitive または ComplexType の場合に使用されます。</summary>
      <typeparam name="TReturnType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollection``1">
      <summary> アクションの戻り値の型を設定します。戻り値の型が Primitive または ComplexTypes のコレクションの場合に使用されます。</summary>
      <typeparam name="TReturnElementType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
      <summary> EntityType インスタンスのコレクションに戻り値の型を設定します。</summary>
      <param name="entitySetName">返される EntityType インスタンスを含む entitySetName。</param>
      <typeparam name="TElementEntityType">EntityType である型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
      <summary> 単一の EntityType インスタンスに戻り値の型を設定します。</summary>
      <param name="entitySetName">返される EntityType インスタンスを含む entitySetName。</param>
      <typeparam name="TEntityType">EntityType である型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> bindingParameter の名前、型、および alwaysBindable かどうか (アクションが "isBindable" の場合にのみ使用します) を指定します。 </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionLinkBuilder">
      <summary> ActionLinkBuilder はアクションに注釈を付けるために使用できます。この方法で、バインドされているアクションを呼び出すリンクをフォーマッタで作成します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.BuildActionLink(System.Web.Http.OData.EntityInstanceContext)"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.Http.OData.EntityInstanceContext,System.Boolean})">
      <summary> expensiveAvailabilityCheck に基づいて、また、負荷の高いチェックを実行する必要があるかどうか (EntityInstanceContext.SkipExpensiveActionAvailabilityChecks プロパティを確認して推定されます) に基づいて適切な場合にのみ、アクション リンクを構築するアクション リンク ファクトリを作成します。</summary>
      <returns>新しいアクション リンク ファクトリ。</returns>
      <param name="baseFactory">すべてのチェックに合格した場合に、実際にリンクを構築するアクション リンク ファクトリ。</param>
      <param name="expensiveAvailabilityCheck">負荷が高いが、呼び出した場合、アクションを使用できるかどうかを返す可用性チェック関数。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionLinkBuilder.FollowsConventions"></member>
    <member name="T:System.Web.Http.OData.Builder.BindingParameterConfiguration">
      <summary> BindingParameter を表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.BindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> BindingParameterConfiguration を作成します。</summary>
      <param name="name">バインディング パラメーターの名前</param>
      <param name="parameterType">バインディング パラメーターの型</param>
      <param name="alwaysBindable">アクションをバインディング パラメーターのインスタンスに常にバインド可能かどうか。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.BindingParameterConfiguration.AlwaysBindable">
      <summary> BindingParameter が常にバインド可能かどうかを示します。たとえば、常に使用できるアクションや、特定のタイミングまたは特定の状態でのみ使用できるアクションがあります。 </summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.BindingParameterConfiguration.DefaultBindingParameterName"></member>
    <member name="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration">
      <summary>CollectionPropertyConfiguration は、EntityType または ComplexType の CollectionProperty を表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>指定された <paramref name="property" /> を使用して CollectionPropertyConfiguration を構築します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.ElementType">
      <summary>コレクション内の要素の型を返します。</summary>
      <returns>
        <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsOptional">
      <summary>CollectionProperty を省略可能に (つまり null にすることができるように) 設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsRequired">
      <summary>CollectionProperty を必須に (つまり null にすることができないように) 設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.Kind">
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.RelatedClrType">
      <returns>
        <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.CollectionTypeConfiguration">
      <summary>Collection(Namespace.Customer)、Collection(Namespace.Address) など、何らかの名前付き型のコレクションを表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionTypeConfiguration.#ctor(System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Type)">
      <summary>指定した ElementType の要素を含み、指定した clrType を使用して .NET で表されるコレクションを構築します。</summary>
      <param name="elementType">コレクション内の要素の EdmTypeConfiguration</param>
      <param name="clrType">.NET で明示されるときのこのコレクションの型</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ClrType">
      <returns>
        <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ElementType">
      <summary>このコレクション内の要素の EdmTypeConfiguration</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.FullName">
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Kind">
      <returns>
        <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ModelBuilder">
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Name">
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Namespace">
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsOptional"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsRequired"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration">
      <summary>モデル内の複合型に対して構成を実行できるようにします。ComplexTypeConfiguration を取得するには、<see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1" /> メソッドを使用します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexTypeConfiguration.Kind"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmComplexType" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1">
      <summary>EntityCollectionConfiguration はエンティティのコレクションを表します。このクラスは、コレクションにバインドするアクションなど、エンティティにバインドする対象を構成するために使用できます。</summary>
      <typeparam name="TEntityType">EntityCollection の ElementType である EntityType</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
      <summary>Collection(EntityType) にバインドする新しいアクションを作成します。</summary>
      <returns>アクションをさらに構成できるようにする ActionConfiguration。</returns>
      <param name="name">アクションの名前。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.TransientAction(System.String)">
      <summary>Collection(EntityType) にバインドする場合がある新しいアクションを作成します。</summary>
      <returns>アクションをさらに構成できるようにする ActionConfiguration。</returns>
      <param name="name">アクションの名前。</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration">
      <summary>モデル内のエンティティ セットに対して構成を実行できるようにします。<see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> を取得するには、<see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)" /> メソッドを使用します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type,System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Web.Http.OData.Builder.EntityTypeConfiguration,System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.AddBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>指定されたナビゲーション プロパティを対象のエンティティ セットにバインドします。</summary>
      <returns>詳細に構成できるようにする、<see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBinding" />。</returns>
      <param name="navigationConfiguration">ナビゲーション プロパティ。</param>
      <param name="targetEntitySet">対象のエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Bindings">
      <summary>このエンティティ セットのナビゲーション ターゲットを取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.ClrType">
      <summary>このエンティティ セットに含まれるエンティティ型のバッキング clr 型を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.EntityType">
      <summary>このエンティティ セットに含まれるエンティティ型を取得します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetEditLink">
      <summary>このエンティティ セットのエントリの編集リンクを生成するために使用されたビルダーを取得します。</summary>
      <returns>リンク ビルダー。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
      <summary>このエンティティ セットのフィードの自己リンクを生成するために使用されたビルダーを取得します。</summary>
      <returns>リンク ビルダー。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetIdLink">
      <summary>このエンティティ セットのエントリの ID を生成するために使用されたビルダーを取得します。</summary>
      <returns>ビルダー。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>このエンティティ セットのエントリのために指定されたナビゲーション プロパティについて、ナビゲーション リンクの生成に使用されたビルダーを取得します。</summary>
      <returns>リンク ビルダー。</returns>
      <param name="navigationProperty">ナビゲーション プロパティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetReadLink">
      <summary>このエンティティ セットのエントリの読み取りリンクを生成するために使用されたビルダーを取得します。</summary>
      <returns>リンク ビルダー。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetUrl"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasEditLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>自己リンクをフィードに追加します。</summary>
      <returns>現在構成されているエンティティ セット構成。</returns>
      <param name="feedSelfLinkFactory">リンク URL の生成に使用されるビルダー。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasIdLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.String})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Web.Http.OData.Builder.NavigationLinkBuilder)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.NavigationLinkBuilder)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasReadLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasUrl(System.String)">
      <summary>エンティティ セット URL を構成します。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
      <param name="url">エンティティ セット URL。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Name">
      <summary>このエンティティ セットの名前を取得します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.RemoveBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>指定されたナビゲーション プロパティのバインディングを削除します。</summary>
      <param name="navigationConfiguration">ナビゲーション プロパティ</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration`1">
      <typeparam name="TEntityType"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration`1.EntityType"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.String})">
      <summary> 自己リンクをフィードに追加します。</summary>
      <param name="feedSelfLinkFactory">リンク URL の生成に使用されるビルダー。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary> 自己リンクをフィードに追加します。</summary>
      <param name="feedSelfLinkFactory">リンク URL の生成に使用されるビルダー。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasIdLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> を使用して構築できる <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> を表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.Abstract">
      <summary>このエンティティ型を抽象としてマークします。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>新しい EDM コレクション プロパティをこのエンティティ型に追加します。</summary>
      <returns>追加されたプロパティの <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> を返します。</returns>
      <param name="propertyInfo">バッキング CLR プロパティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>新しい EDM 複合型プロパティをこのエンティティ型に追加します。</summary>
      <returns>追加されたプロパティの <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> を返します。</returns>
      <param name="propertyInfo">バッキング CLR プロパティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity)">
      <summary>新しい EDM ナビゲーション プロパティをこのエンティティ型に追加します。</summary>
      <returns>追加されたプロパティの <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> を返します。</returns>
      <param name="navigationProperty">バッキング CLR プロパティ。</param>
      <param name="multiplicity">ナビゲーション プロパティの <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" />。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>新しい EDM プリミティブ プロパティをこのエンティティ型に追加します。</summary>
      <returns>追加されたプロパティの <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> を返します。</returns>
      <param name="propertyInfo">バッキング CLR プロパティ。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseType">
      <summary>このエンティティ型のベース型を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseTypeConfigured">
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFrom(System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>このエンティティ型の基本型を設定します。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
      <param name="baseType">基本エンティティ型。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
      <summary>このエンティティ型の基本型を null に設定します。これは、このエンティティ型が何からも派生しないことを意味します。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
      <summary>このエンティティ型のキー プロパティを構成します。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
      <param name="keyProperty">このエンティティ型のキー プロパティに追加するプロパティ。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.IsAbstract">
      <summary>この型が抽象型かどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Keys">
      <summary>このエンティティ型のキーのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Kind">
      <summary>この <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /> の <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> を取得します</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.NavigationProperties">
      <summary>このエンティティ型の <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveKey(System.Web.Http.OData.Builder.PrimitivePropertyConfiguration)">
      <summary>エンティティのキー コレクションからプロパティを削除します。</summary>
      <param name="keyProperty">削除するキー。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)"></member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration`1">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> を使用して構築できる <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> を表します。</summary>
      <typeparam name="TEntityType">この <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> のバッキング CLR 型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Abstract">
      <summary>このエンティティ型を抽象としてマークします。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
      <summary>この EntityType にバインドするアクションを作成します。</summary>
      <returns>新しいアクションを詳細に構成できるようにする ActionConfiguration。</returns>
      <param name="name">アクションの名前。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.BaseType">
      <summary>このエンティティ型のベース型を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Collection">
      <summary>エンティティのコレクションにアクセスするために使用されます。これによって、EntityCollections にバインド可能なアクションを構成できます。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
      <summary>このエンティティ型の基本型を設定します。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
      <typeparam name="TBaseType">基本エンティティ型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
      <summary>このエンティティ型の基本型を null に設定します。これは、このエンティティ型が何からも派生しないことを意味します。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>このエンティティ型のキー プロパティを構成します。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
      <param name="keyDefinitionExpression">プライマリ キーとして使用されるプロパティを表すラムダ式。たとえば、C# では t =&amp;gt; t.Id であり、Visual Basic では .Net Function(t) t.Id です。</param>
      <typeparam name="TKey">キーの型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>このエンティティ型の many リレーションシップを構成します。</summary>
      <returns>関係をさらに構成するために使用できる構成オブジェクト。</returns>
      <param name="navigationPropertyExpression">関係のナビゲーション プロパティを表すラムダ式。たとえば、C# では t =&amp;gt; t.MyProperty、Visual Basic では .Net Function(t) t.MyProperty。</param>
      <typeparam name="TTargetEntity">関係の他の端のエンティティの型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>このエンティティ型の省略可能なリレーションシップを構成します。</summary>
      <returns>関係をさらに構成するために使用できる構成オブジェクト。</returns>
      <param name="navigationPropertyExpression">関係のナビゲーション プロパティを表すラムダ式。たとえば、C# では t =&amp;gt; t.MyProperty、Visual Basic では .Net Function(t) t.MyProperty。</param>
      <typeparam name="TTargetEntity">関係の他の端のエンティティの型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>このエンティティ型の必須のリレーションシップを構成します。</summary>
      <returns>関係をさらに構成するために使用できる構成オブジェクト。</returns>
      <param name="navigationPropertyExpression">関係のナビゲーション プロパティを表すラムダ式。たとえば、C# では t =&amp;gt; t.MyProperty、Visual Basic では .Net Function(t) t.MyProperty。</param>
      <typeparam name="TTargetEntity">関係の他の端のエンティティの型。</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
      <summary>このエンティティ型の <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> のコレクションを取得します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.TransientAction(System.String)">
      <summary>この EntityType にバインドする場合があるアクションを作成します。</summary>
      <returns>新しい "一時" アクションを詳細に構成できるようにする ActionConfiguration。</returns>
      <param name="name">アクションの名前。</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration">
      <summary>EdmType を表します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ClrType">
      <summary>EdmType に関連付けられている .NET の型。</summary>
      <returns>
        <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.FullName">
      <summary>EdmType の完全な名前 (名前空間を含みます)。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Kind">
      <summary>EdmType の種類。たとえば、EntityType、ComplexType、PrimitiveType、CollectionType が含まれます。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
      <summary>この IEdmType を作成するために使用される ODataModelBuilder。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Name">
      <summary>EdmType の名前。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Namespace">
      <summary>EdmType の名前空間。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationLinkBuilder"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.NavigationLinkBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.Factory"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.FollowsConventions"></member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration">
      <summary>Used to configure the binding for a navigation property for an entity set. This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.#ctor(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> class.</summary>
      <param name="navigationProperty">The navigation property for the binding.</param>
      <param name="entitySet">The target entity set of the binding.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.EntitySet">
      <summary>Gets the target entity set of the binding.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.NavigationProperty">
      <summary>Gets the navigation property of the binding.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.DeclaringEntityType"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Multiplicity"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Optional"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.RelatedClrType"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Required"></member>
    <member name="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration">
      <summary> 非バインディング型プロシージャ パラメーターを表します。非バインディング型パラメーターは、アクションの POST 本文で指定します。Function で非バインディング型パラメーターを指定するには、~/.../Function(p1=value)、~/.../Function(p1=@x)?@x=value、~/.../Function?p1=value (Function が URL パスの最後のセグメントの場合にのみ使用できます) という 3 つの方法があります。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NonbindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.Conventions.IConvention" /> のセットに基づいて、CLR クラスを EDM モデルに自動的にマップするために使用します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor">
      <summary>新しい <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> を初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>新しい <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> を初期化します。</summary>
      <param name="configuration">使用する <see cref="T:System.Web.Http.HttpConfiguration" />。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddComplexType(System.Type)">
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntity(System.Type)">
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.GetEdmModel">
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore``1">
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> を返します。</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataConventionModelBuilder.OnModelCreating">
      <summary>このアクションは、<see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> がすべての規約を実行した後で、構成がロックされ、<see cref="T:Microsoft.Data.Edm.IEdmModel" /> の構築に使用される前に呼び出されます。</summary>
      <returns>
        <see cref="T:System.Action`1" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataModelBuilder">
      <summary>EDM モデルに CLR クラスをマップします。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Action(System.String)">
      <summary>バインドできないアクションをビルダーに追加します。</summary>
      <returns>指定したアクションの構成オブジェクト。</returns>
      <param name="name">アクションの名前。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
      <summary>モデルの一部として複合型を登録し、エンティティの構成に使用できるオブジェクトを返します。このメソッドを同じエンティティに対して複数回呼び出して、複数行の構成を実行できます。</summary>
      <returns>指定された複合型に対する構成オブジェクト。</returns>
      <param name="type">登録または構成する型。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntity(System.Type)">
      <summary>モデルの一部としてエンティティ型を登録し、エンティティの構成に使用できるオブジェクトを返します。このメソッドを同じエンティティに対して複数回呼び出して、複数行の構成を実行できます。</summary>
      <returns>指定されたエンティティ型に対する構成オブジェクト。</returns>
      <param name="type">登録または構成する型。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>モデルの一部としてエンティティ セットを登録し、エンティティ セットの構成に使用できるオブジェクトを返します。このメソッドを同じ型に対して複数回呼び出して、複数行の構成を実行できます。</summary>
      <returns>指定されたエンティティ セットに対する構成オブジェクト。</returns>
      <param name="name">エンティティ セットの名前。</param>
      <param name="entityType">登録または構成する型。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>プロシージャをモデルに追加します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1">
      <summary>複合型としてモデルに型を登録し、複合型の構成に使用できるオブジェクトを返します。このメソッドを同じ型に対して複数回呼び出して、複数行の構成を実行できます。</summary>
      <returns>指定された複合型に対する構成オブジェクト。</returns>
      <typeparam name="TComplexType">登録または構成する型。</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.ContainerName">
      <summary>すべての EntitySets、Actions、および Functions を保持するコンテナーの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.DataServiceVersion">
      <summary>モデルのデータ サービス バージョンを取得または設定します。既定値は 3.0 です。</summary>
      <returns>
        <see cref="T:System.Version" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Entity``1">
      <summary>モデルの一部としてエンティティ型を登録し、エンティティの構成に使用できるオブジェクトを返します。このメソッドを同じエンティティに対して複数回呼び出して、複数行の構成を実行できます。</summary>
      <returns>指定されたエンティティ型に対する構成オブジェクト。</returns>
      <typeparam name="TEntityType">登録または構成する型。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
      <summary>モデルの一部としてエンティティ セットを登録し、エンティティ セットの構成に使用できるオブジェクトを返します。このメソッドを同じ型に対して複数回呼び出して、複数行の構成を実行できます。</summary>
      <returns>指定されたエンティティ セットに対する構成オブジェクト。</returns>
      <param name="name">エンティティ セットの名前。</param>
      <typeparam name="TEntityType">エンティティ セットのエンティティ型。</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySets">
      <summary>構築するモデルの EDM エンティティ セットのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetEdmModel">
      <summary>このビルダーを使用して実行される構成に基づいて、<see cref="T:Microsoft.Data.Edm.IEdmModel" /> を作成します。</summary>
      <returns>構築されたモデル。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
      <summary>T に一致する構成済みの構造型またはプリミティブ型の検索を試みます。一致が見つからない場合、NULL が返されます。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.MaxDataServiceVersion">
      <summary>モデルの最大データ サービス バージョンを取得または設定します。既定値は 3.0 です。</summary>
      <returns>
        <see cref="T:System.Version" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Namespace">
      <summary>結果のモデルに使用される名前空間を取得または設定します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Procedures">
      <summary>構築されるモデルのプロシージャのコレクション (つまり、Actions、Functions、および ServiceOperations) を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
      <summary>モデルからエンティティ セットを削除します。</summary>
      <returns>エンティティ セットがモデル内にある場合は <see cref="" />。それ以外の場合は <see cref="" />。</returns>
      <param name="name">削除するエンティティ セットの名前。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
      <summary>      モデルからプロシージャを削除します。</summary>
      <returns>プロシージャがモデル内に存在する場合は true。それ以外の場合は false。</returns>
      <param name="name">削除するプロシージャの名前。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>モデルからプロシージャを削除します。</summary>
      <returns>プロシージャがモデル内に存在する場合は true。それ以外の場合は false。</returns>
      <param name="procedure">削除するプロシージャ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
      <summary>モデルから型を削除します。</summary>
      <returns>型がモデル内にある場合は true。それ以外の場合は false。</returns>
      <param name="type">削除する型。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.StructuralTypes">
      <summary>構築するモデルの EDM 型のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ParameterConfiguration">
      <summary>プロシージャに対するパラメーターを表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.Name">
      <summary>パラメーターの名前。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.TypeConfiguration">
      <summary>パラメーターの型。</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration">
      <summary>エンティティ型または複合型のプリミティブ プロパティを構成するために使用します。この構成機能は、モデル ビルダー Fluent API で公開されています。「<see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />」を参照してください。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
      <summary>省略可能なプロパティを構成します。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
      <summary>必須のプロパティを構成します。</summary>
      <returns>複数の呼び出しをチェーンできるようにそれ自体を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration">
      <summary>PrimitiveType を表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,Microsoft.Data.Edm.IEdmPrimitiveType,System.Type)">
      <summary>単体テストのみを目的とするパブリック コンストラクターです。PrimitiveTypeConfiguration を取得するには、ODataModelBuilder.GetTypeConfigurationOrNull(Type) を使用します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ClrType"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
      <summary>この PrimitiveTypeConfiguration に関連付けられた IEdmPrimitiveType を返します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.FullName"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ModelBuilder"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Name"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Namespace"></member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureConfiguration">
      <summary>モデルで公開されているプロシージャを表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ProcedureConfiguration.#ctor"></member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ContainerQualifiedName">
      <summary>OData URL に使用される場合のプロシージャの修飾名。修飾は、他の使用できる単一パート識別子とプロシージャを区別するために必要です。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.EntitySet">
      <summary>エンティティが返される EntitySet。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullName">
      <summary>FullName は ContainerQualifiedName です。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
      <summary>FullyQualifiedName は、名前空間を使用してさらに修飾した ContainerQualifiedName です。ほとんどのサービスは同じ名前のコンテナーが 1 つのみなので、通常、FullyQualifiedName は必要ありません。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsAlwaysBindable">
      <summary>プロシージャが IsBindable の場合、常にバインド可能かどうか。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsBindable">
      <summary>BindingParameter を表す URL にプロシージャをバインドできるかどうか。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsComposable">
      <summary>これに基づいてプロシージャを構成できるかどうか。たとえば、プロシージャを呼び出し、結果に何か他の処理を実行する要求に対して、プロシージャを呼び出す URL をベース URL として使用できるかどうか。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsSideEffecting">
      <summary>このプロシージャに副作用があるかどうか。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Kind">
      <summary>プロシージャの種類 (Action、Function、または ServiceOperation を指定できます)。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ModelBuilder"></member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Name">
      <summary>プロシージャの名前。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Parameters">
      <summary>プロシージャに指定できるパラメーター。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ReturnType">
      <summary>プロシージャを呼び出したときに返される型。</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureKind">
      <summary>OData プロシージャの種類。Action、Function、または ServiceOperation のいずれか。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Action">
      <summary />
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Function">
      <summary />
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.ServiceOperation">
      <summary />
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyConfiguration">
      <summary>すべてのプロパティ構成の基本クラス。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.AddedExplicitly">
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.DeclaringType">
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Kind">
      <summary>プロパティの <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Name">
      <summary>プロパティの名前を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo">
      <summary>マッピング CLR <see cref="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Reflection.PropertyInfo" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.RelatedClrType">
      <summary>プロパティの CLR <see cref="T:System.Type" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Type" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyKind"></member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Primitive">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Complex">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Collection">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Navigation">
      <summary>.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1">
      <summary> 自己リンク ファクトリ、およびリンク ファクトリが規約に従っているかどうかをカプセル化します。</summary>
      <typeparam name="T">生成される自己リンクの種類。これは、ID リンク用と、読み取りおよび編集リンク用です。</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,`0},System.Boolean)">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1" /> の新しいインスタンスを構築します。</summary>
      <param name="linkFactory">リンク ファクトリ。</param>
      <param name="followsConventions">ファクトリがリンク生成の OData 規約に従うかどうかを示します。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.Factory">
      <summary> リンクを生成するファクトリを取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
      <summary> リンク ファクトリが OData 規約に従うかどうかを示すブール値を取得します。 </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration">
      <summary>すべての構造型プロパティ構成の基本クラス。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.OptionalProperty"></member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> を使用して構築できる <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> を表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>コレクション プロパティをこの edm 型に追加します。</summary>
      <returns>プロパティを詳細に構成できるようにする、<see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />。</returns>
      <param name="propertyInfo">追加されるプロパティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>複合型プロパティをこの edm 型に追加します。</summary>
      <returns>プロパティを詳細に構成できるようにする、<see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />。</returns>
      <param name="propertyInfo">追加されるプロパティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>プリミティブ プロパティをこの edm 型に追加します。</summary>
      <returns>プロパティを詳細に構成できるようにする、<see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" />。</returns>
      <param name="propertyInfo">追加されるプロパティ。</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ClrType">
      <summary>バッキング CLR <see cref="T:System.Type" /> を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ExplicitProperties"></member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.FullName">
      <summary>この edm 型の完全な名前を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
      <summary>バッキング CLR 型から、この edm 型で無視するプロパティを取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Kind">
      <summary>この edm 型の <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Name">
      <summary>この edm 型の名前を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Namespace">
      <summary>この edm 型の名前空間を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Properties">
      <summary>この edm 型の宣言済みプロパティを取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemovedProperties"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>指定したプロパティを削除します。</summary>
      <param name="propertyInfo">削除されるプロパティ。</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1">
      <typeparam name="TStructuralType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.#ctor(System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.CollectionProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <typeparam name="TElementType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Properties"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.IO.Stream}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter">
      <summary>OData を処理する <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> クラス。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanReadType(System.Type)">
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanWriteType(System.Type)">
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <returns>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageReaderQuotas">
      <summary>このフォーマッタが読み取り側で使用する <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageWriterQuotas">
      <summary>このフォーマッタが書き込み側で使用する <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters">
      <summary>OData を処理する <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> クラス。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create">
      <summary>OData を処理するメディア タイプ フォーマッタのセットを作成します。</summary>
      <returns>OData を処理するメディア タイプ フォーマッタのセット。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider">
      <summary>EDM プリミティブ型に対して <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> を提供します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.#ctor"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)"></member>
    <member name="T:System.Web.Http.OData.Query.AllowedArithmeticOperators">
      <summary> $filter を使用してクエリを行うことができる算術演算子。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.None">
      <summary> $filter で算術演算子を許可しない場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Add">
      <summary> $filter で "Add" 算術演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Subtract">
      <summary> $filter で "Subtract" 算術演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Multiply">
      <summary> $filter で "Multiply" 算術演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Divide">
      <summary> $filter で "Divide" 算術演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Modulo">
      <summary> $filter で "Modulo" 算術演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.All">
      <summary> $filter ですべての算術演算子を許可する場合に対応する値。 </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedFunctions">
      <summary> $filter を使用してクエリを行うことができる関数。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.None">
      <summary> $filter で関数を許可しない場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.StartsWith">
      <summary> $filter で "StartsWith" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.EndsWith">
      <summary> $filter で "EndsWith" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.SubstringOf">
      <summary> $filter で "SubstringOf" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Length">
      <summary> $filter で "Length" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IndexOf">
      <summary> $filter で "IndexOf" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Concat">
      <summary> $filter で "Concat" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Substring">
      <summary> $filter で "Substring" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToLower">
      <summary> $filter で "ToLower" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToUpper">
      <summary> $filter で "ToUpper" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Trim">
      <summary> $filter で "Trim" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Cast">
      <summary> $filter で "Cast" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Year">
      <summary> $filter で "Year" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Years">
      <summary> $filter で "Years" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Month">
      <summary> $filter で "Month" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Months">
      <summary> $filter で "Months" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Day">
      <summary> $filter で "Day" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Days">
      <summary> $filter で "Days" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hour">
      <summary> $filter で "Hour" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hours">
      <summary> $filter で "Hours" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minute">
      <summary> $filter で "Minute" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minutes">
      <summary> $filter で "Minutes" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Second">
      <summary> $filter で "Second" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Seconds">
      <summary> $filter で "Seconds" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Round">
      <summary> $filter で "Round" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Floor">
      <summary> $filter で "Floor" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Ceiling">
      <summary> $filter で "Ceiling" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IsOf">
      <summary> $filter で "IsOf" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Any">
      <summary> $filter で "Any" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.All">
      <summary> $filter で "All" 関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllStringFunctions">
      <summary> $filter ですべての文字列関連の関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllDateTimeFunctions">
      <summary> $filter ですべての日時関連の関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllMathFunctions">
      <summary> $filter で数学関連の関数を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllFunctions">
      <summary> $filter ですべての関数を許可する場合に対応する値。 </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedLogicalOperators">
      <summary> $filter を使用してクエリを行うことができる論理演算子。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.None">
      <summary> $filter で論理演算子を許可しない場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Or">
      <summary> $filter で "Or" 論理演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.And">
      <summary> $filter で "And" 論理演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Equal">
      <summary> $filter で "Equal" 論理演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.NotEqual">
      <summary> $filter で "NotEqual" 論理演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThan">
      <summary> $filter で "GreaterThan" 論理演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
      <summary> $filter で "GreaterThanOrEqual" 論理演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThan">
      <summary> $filter で "LessThan" 論理演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
      <summary> $filter で "LessThanOrEqual" 論理演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Not">
      <summary> $filter で "Not" 論理演算子を許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.All">
      <summary> $filter ですべての論理演算子を許可する場合に対応する値。 </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedQueryOptions">
      <summary> クエリを許可する OData クエリ オプション。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.None">
      <summary> クエリ オプションを許可しない場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Filter">
      <summary> $filter クエリ オプションを許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Expand">
      <summary> $expand クエリ オプションを許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Select">
      <summary> $select クエリ オプションを許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.OrderBy">
      <summary> $orderby クエリ オプションを許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Top">
      <summary> $top クエリ オプションを許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Skip">
      <summary> $skip クエリ オプションを許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.InlineCount">
      <summary> $inlinecount クエリ オプションを許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Format">
      <summary> $format クエリ オプションを許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.SkipToken">
      <summary> $skiptoken クエリ オプションを許可する場合に対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Supported">
      <summary>
        <see cref="T:System.Web.Http.QueryableAttribute" /> でサポートされる既定のクエリ オプションに対応する値。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.All">
      <summary> すべてのクエリ オプションを許可する場合に対応する値。 </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.FilterQueryOption">
      <summary>クエリに使用する $filter OData クエリ オプションを定義します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>生の $filter 値と <see cref="T:System.Web.Http.OData.ODataQueryContext" /> の EdmModel に基づいて、<see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> の新しいインスタンスを初期化します。</summary>
      <param name="rawValue">$filter クエリの生の値。null または空でもかまいません。</param>
      <param name="context">
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> および型の情報を含む <see cref="T:System.Web.Http.OData.ODataQueryContext" />。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>フィルター クエリを指定された IQueryable に適用します。</summary>
      <returns>filter クエリが適用されたクエリ。</returns>
      <param name="query">フィルター クエリを適用する対象の IQueryable。</param>
      <param name="querySettings">null の伝達を処理する必要があるかどうかを指定します。基になっているクエリ プロバイダーが null の伝達を処理する場合は false を渡します。それ以外の場合は true を渡します。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings,System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary>フィルター クエリを指定された IQueryable に適用します。</summary>
      <returns>
        <see cref="T:System.Linq.IQueryable" /> を返します。</returns>
      <param name="query">フィルター クエリを適用する対象の IQueryable。</param>
      <param name="querySettings">null の伝達を処理する必要があるかどうかを指定します。基になっているクエリ プロバイダーが null の伝達を処理する場合は false を渡します。それ以外の場合は true を渡します。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Context">
      <summary>指定された <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause">
      <summary>このクエリ オプションの解析済み <see cref="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause" /> を取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.OData.Query.SemanticAst.FilterClause" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.RawValue">
      <summary>生の $filter 値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>指定した <paramref name="validationSettings" /> に基づいて filter クエリを検証します。検証が失敗した場合は、ODataException をスローします。</summary>
      <param name="validationSettings">すべての検証設定を含む <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> のインスタンス。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Validator">
      <summary>Filter クエリ検証コントロールを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.HandleNullPropagationOption">
      <summary>この enum は、クエリ可能な要素のサポート時に null 値の反映を処理する方法を定義します。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default">
      <summary>クエリ構成時に、クエリ プロバイダーに基づいて null 値の反映を処理する方法を指定します。これは、<see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> で使用される既定の値です。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.True">
      <summary>クエリの構成時に、null 値の反映を処理します。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.False">
      <summary>クエリの構成時に、null 値の反映を処理しません。</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountQueryOption">
      <summary> $inlinecount クエリ オプションの値を表します。また、クエリを満たすエンティティ数を取得する方法を公開します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="rawValue">$inlinecount クエリ オプションの生の値。</param>
      <param name="context">
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> および型の情報を含む <see cref="T:System.Web.Http.OData.ODataQueryContext" />。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Context">
      <summary> 指定された <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を取得します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.GetEntityCount(System.Linq.IQueryable)">
      <summary> 応答にインライン カウントが含まれる場合は、指定したクエリを満たすエンティティ数、それ以外の場合は、null を取得します。</summary>
      <returns>応答にインライン カウントが含まれる場合は、指定したクエリを満たすエンティティ数。それ以外の場合は null。</returns>
      <param name="query">数を計算するクエリ。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.RawValue">
      <summary> 生の $inlinecount 値を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Value">
      <summary> $inlinecount の値を解析済みのフォームで取得します。</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountValue">
      <summary> $inlinecount クエリ オプション値の列挙を定義します。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.None">
      <summary> "none" $inlinecount クエリ オプション値に対応します。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.AllPages">
      <summary> "allpages" $inlinecount クエリ オプション値に対応します。 </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions">
      <summary>これは、クエリの構成を実行するために使用できる複合 OData クエリ オプションを定義します。現在は、$filter、$orderby、$top、$skip、および $inlinecount のみをサポートします。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>受信した要求および <see cref="T:System.Web.Http.OData.ODataQueryContext" /> からのメタデータ情報を基にして、<see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="context">
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> および型の情報を含む <see cref="T:System.Web.Http.OData.ODataQueryContext" />。</param>
      <param name="request">受信した要求メッセージ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
      <summary>  個別のクエリを指定された IQueryable に正しい順序で適用します。</summary>
      <returns>クエリが適用された後のクエリ。</returns>
      <param name="query">クエリを適用する対象の IQueryable。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>個別のクエリを指定された IQueryable に正しい順序で適用します。</summary>
      <returns>クエリが適用された後のクエリ。</returns>
      <param name="query">クエリを適用する対象の IQueryable。</param>
      <param name="querySettings">クエリの構成で使用する設定。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Context">
      <summary>特定の <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Filter">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.InlineCount">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String)">
      <summary>指定したクエリ オプションが OData システム クエリ オプションかどうかを確認します。</summary>
      <returns>クエリ オプションが OData システム クエリ オプションの場合は true。それ以外の場合は false。</returns>
      <param name="queryOptionName">クエリ オプションの名前。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
      <summary>クエリ結果を最大結果数までに制限します。</summary>
      <returns>制限されたクエリ結果。</returns>
      <param name="queryable">制限するクエリ可能な要素。</param>
      <param name="limit">クエリ結果の限度値。</param>
      <param name="resultsLimited">クエリ結果が制限された場合は true。それ以外の場合は false。</param>
      <typeparam name="T">エンティティの CLR 型。</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.OrderBy">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.RawValues">
      <summary>すべての OData クエリ オプションの生の文字列を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.ODataRawQueryOptions" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Request">
      <summary>このインスタンスに関連付けられた要求メッセージを取得します。</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Skip">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Top">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>指定された <paramref name="validationSettings" /> に基づいて、$skip、$top、$orderby、$filter など、すべての OData クエリを検証します。検証が失敗した場合は ODataException をスローします。</summary>
      <param name="validationSettings">すべての検証設定を含む <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> のインスタンス。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Validator">
      <summary>クエリ検証コントロールを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions`1">
      <summary>これは、クエリの構成を実行するために使用できる複合 OData クエリ オプションを定義します。現在は、$filter、$orderby、$top、$skip のみをサポートします。</summary>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>受信した要求および <see cref="T:System.Web.Http.OData.ODataQueryContext" /> からのメタデータ情報を基にして、<see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="context">
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> および型の情報を含む <see cref="T:System.Web.Http.OData.ODataQueryContext" />。</param>
      <param name="request">受信した要求メッセージ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
      <summary>個別のクエリを指定された IQueryable に正しい順序で適用します。</summary>
      <returns>クエリが適用された後のクエリ。</returns>
      <param name="query">クエリを適用する対象の IQueryable。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>個別のクエリを指定された IQueryable に正しい順序で適用します。</summary>
      <returns>クエリが適用された後のクエリ。</returns>
      <param name="query">クエリを適用する対象の IQueryable。</param>
      <param name="querySettings">クエリの構成で使用する設定。</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQuerySettings">
      <summary>このクラスは、クエリの構成時に使用する設定を示します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> クラスの新しいインスタンスをインスタンス化し、既定の設定を初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor(System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>既存のクラスに基づいて、<see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="settings">コピー元の設定。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnableConstantParameterization">
      <summary>定数をパラメーター化する必要があるかどうかを示す値を取得または設定します。定数をパラメーター化すると、Entity Framework でのパフォーマンスが向上します。</summary>
      <returns>既定値は、true です。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnsureStableOrdering">
      <summary>安定した並べ替え順序を保証するために必要なときは、クエリの構成で元のクエリを変更する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>値 true は、安定した並べ替え順序を保証する必要があるときは元のクエリを変更する必要があることを示します。値 false は、クエリを変更しなくても並べ替え順序は安定していると見なせることを示します。安定した並べ替え順序を保証するクエリ プロバイダーでは、この値を false に設定する必要があります。既定値は、true です。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation">
      <summary>クエリの構成の間に null の伝達を処理する方法を示す値を取得または設定します。</summary>
      <returns>既定値は、<see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" /> です。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.PageSize">
      <summary>返すクエリ結果の最大数を取得または設定します。</summary>
      <returns>返すクエリ結果の最大数。制限がない場合は null。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataRawQueryOptions">
      <summary>受け取った要求に含まれる文字列形式の生のクエリ値を表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataRawQueryOptions.#ctor"></member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Expand">
      <summary>受け取った要求 URI に $expand クエリ値が存在する場合は、その生の値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Filter">
      <summary>受け取った要求 URI に $filter クエリ値が存在する場合は、その生の値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Format">
      <summary>受け取った要求 URI に $format クエリ値が存在する場合は、その生の値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.InlineCount">
      <summary>受け取った要求 URI に $inlineCount クエリ値が存在する場合は、その生の値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.OrderBy">
      <summary>受け取った要求 URI に $orderby クエリ値が存在する場合は、その生の値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Select">
      <summary>受け取った要求 URI に $select クエリ値が存在する場合は、その生の値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Skip">
      <summary>受け取った要求 URI に $skip クエリ値が存在する場合は、その生の値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.SkipToken">
      <summary>受け取った要求 URI に $skiptoken クエリ値が存在する場合は、その生の値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Top">
      <summary>受け取った要求 URI に $top クエリ値が存在する場合は、その生の値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataValidationSettings">
      <summary> このクラスは、クエリを行うときの検証設定を示します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataValidationSettings.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedArithmeticOperators">
      <summary> "add"、"sub"、"mul"、"div"、"mod" などの許可されている算術演算子の一覧を取得または設定します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedFunctions">
      <summary>  $filter クエリで使用される、許可される関数の一覧を取得または設定します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedLogicalOperators">
      <summary> "eq"、"ne"、"gt"、"ge"、"lt"、"le"、"and"、"or"、"not" など、許可される論理演算子の一覧を取得または設定します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedOrderByProperties">
      <summary> 結果の順序指定に使用できるプロパティの一覧を取得します。既定では、この一覧は空です。つまり、任意のプロパティで順序を指定できます。たとえば、空のコレクションがある場合、クライアントはクエリ可能な結果を任意のプロパティで並べ替えることができます。この一覧に "Name" を追加した場合、クエリ可能な結果を Name プロパティでのみ並べ替えることができることを示します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedQueryOptions">
      <summary> 許可された内部クエリであるクエリ パラメーターを取得または設定します。既定値は、$filter、$skip、$top、$orderby、$expand、$select、$inlineCount、$format、$skipToken などのすべてのクエリ オプションです。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxAnyAllExpressionDepth">
      <summary> クエリの内部に入れ子にされる任意またはすべての要素の最大の深さを取得または設定します。</summary>
      <returns> クエリの内部に入れ子にされる任意またはすべての要素の最大の深さ。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxNodeCount">
      <summary> $filter 構文ツリー内のノードの最大数を取得または設定します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxSkip">
      <summary> クライアントが要求できる $skip の最大値を取得または設定します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxTop">
      <summary> クライアントが要求できる $top の最大値を取得または設定します。 </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByItNode">
      <summary> $orderby 句の "$it" 式による順序を表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByItNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.OrderByItNode" /> クラスの新しいインスタンスをインスタンス化します。</summary>
      <param name="direction">このノードの <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" />。</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByNode">
      <summary> $orderby 句の式による単一の順序を表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.OrderByNode" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.CreateCollection(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
      <summary>
        <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" /> インスタンスのリンクされている一覧から、<see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> インスタンスのコレクションを作成します。</summary>
      <returns>新しい <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> インスタンスのコレクション。</returns>
      <param name="orderByClause">
        <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" /> のリンクされている一覧のヘッド。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByNode.Direction">
      <summary> 現在のノードの <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> を取得します。</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByPropertyNode">
      <summary>
        <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> 式によって順序を表します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> クラスの新しいインスタンスをインスタンス化します。</summary>
      <param name="property">このノードの <see cref="T:Microsoft.Data.Edm.IEdmProperty" />。</param>
      <param name="direction">このノードの <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" />。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.Property">
      <summary>現在のノードの <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> を取得します。</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByQueryOption">
      <summary>クエリに使用する $orderby OData クエリ オプションを定義します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>生の $orderby 値と <see cref="T:System.Web.Http.OData.ODataQueryContext" /> の EdmModel に基づいて、<see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> の新しいインスタンスを初期化します。</summary>
      <param name="rawValue">$orderby クエリの生の値。null または空でもかまいません。</param>
      <param name="context">
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> および型の情報を含む <see cref="T:System.Web.Http.OData.ODataQueryContext" />。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
      <summary>$orderby クエリを指定された IQueryable に適用します。</summary>
      <returns>orderby クエリが適用された後のクエリ。</returns>
      <param name="query">orderby クエリを適用する対象の IQueryable。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
      <summary>  $orderby クエリを指定された IQueryable に適用します。</summary>
      <returns>orderby クエリが適用された後のクエリ。</returns>
      <param name="query">orderby クエリを適用する対象の IQueryable。</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Context">
      <summary>指定された <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByNodes">
      <summary>現在の <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> の <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> インスタンスのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.RawValue">
      <summary>生の $orderby 値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>指定した <paramref name="validationSettings" /> に基づいて orderby クエリを検証します。検証が失敗した場合は、ODataException をスローします。</summary>
      <param name="validationSettings">すべての検証設定を含む <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> のインスタンス。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Validator">
      <summary>OrderBy クエリ検証コントロールを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.QueryFilterProvider">
      <summary>戻り値の型が <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> 型のパラメーターをバインドしない <see cref="T:System.Linq.IQueryable" /> または <see cref="T:System.Linq.IQueryable`1" /> のアクションにアクション フィルターを適用する <see cref="T:System.Web.Http.Filters.IFilterProvider" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.#ctor(System.Web.Http.Filters.IActionFilter)">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.QueryFilterProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="queryFilter">クエリを実行するアクション フィルター。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>指定したアクションに適用するフィルターを指定します。</summary>
      <returns>指定したアクションに適用するフィルター。</returns>
      <param name="configuration">サーバー構成。</param>
      <param name="actionDescriptor">フィルターを適用するアクションのアクション記述子。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.QueryFilterProvider.QueryFilter">
      <summary>クエリを実行するアクション フィルターを取得します。</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.SkipQueryOption">
      <summary>クエリに使用する $skip OData クエリ オプションを定義します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>生の $skip 値と <see cref="T:System.Web.Http.OData.ODataQueryContext" /> の EdmModel に基づいて、<see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> の新しいインスタンスを初期化します。</summary>
      <param name="rawValue">$skip クエリの生の値。null または空でもかまいません。</param>
      <param name="context">
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> および型の情報を含む <see cref="T:System.Web.Http.OData.ODataQueryContext" />。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>
        <see cref="T:System.Linq.IQueryable" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>
        <see cref="T:System.Linq.IQueryable`1" /> を返します。</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Context">
      <summary>指定された <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.RawValue">
      <summary>生の $skip 値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>指定した <paramref name="validationSettings" /> に基づいて skip クエリを検証します。検証が失敗した場合は ODataException をスローします。</summary>
      <param name="validationSettings">すべての検証設定を含む <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> のインスタンス。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Validator">
      <summary>  Skip クエリ検証コントロールを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Value">
      <summary>$skip の値を解析済みの整数として取得します。</summary>
      <returns>
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.TopQueryOption">
      <summary>クエリに使用する $top OData クエリ オプションを定義します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>生の $top 値と <see cref="T:System.Web.Http.OData.ODataQueryContext" /> の EdmModel に基づいて、<see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> の新しいインスタンスを初期化します。</summary>
      <param name="rawValue">$top クエリの生の値。null または空でもかまいません。</param>
      <param name="context">
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> および型の情報を含む <see cref="T:System.Web.Http.OData.ODataQueryContext" />。</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>
        <see cref="T:System.Linq.IQueryable" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>
        <see cref="T:System.Linq.IOrderedQueryable`1" /> を返します。</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Context">
      <summary>指定された <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.ODataQueryContext" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.RawValue">
      <summary>生の $top 値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>指定した <paramref name="validationSettings" /> に基づいて top クエリを検証します。検証が失敗した場合は、ODataException をスローします。</summary>
      <param name="validationSettings">すべての検証設定を含む <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> のインスタンス。</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Validator">
      <summary>Top クエリ検証コントロールを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Value">
      <summary>$top の値を解析済みの整数として取得します。</summary>
      <returns>
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator">
      <summary> 設定に基づく FilterQueryOption の検証に使用される検証コントロール クラスを定義します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.Validate(System.Web.Http.OData.Query.FilterQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> この検証コントロール クラスのエントリ ポイント。このメソッドを使用して、FilterQueryOption を検証します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAllNode(Microsoft.Data.OData.Query.SemanticAst.AllNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、フィルター クエリ内に "all" クエリを制限します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAnyNode(Microsoft.Data.OData.Query.SemanticAst.AnyNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、フィルター クエリ内に "any" クエリを制限します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> add、sub、mul、div、mod などの算術演算子について、このメソッドをオーバーライドします。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>このメソッドをオーバーライドして、フィルター クエリ内にバイナリ演算子を制限します。"not" を除くすべての論理演算子とすべての算術演算子が含まれます。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、コレクション プロパティ アクセサーを検証します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConstantNode(Microsoft.Data.OData.Query.SemanticAst.ConstantNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、フィルター クエリ内に "constant" を制限します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConvertNode(Microsoft.Data.OData.Query.SemanticAst.ConvertNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、フィルター クエリ内に "cast" を制限します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateEntityCollectionCastNode(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> エンティティ コレクションでキャストを検証する場合、このメソッドをオーバーライドします。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateLogicalOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、"eq"、"ne"、"gt"、"ge"、"lt"、"le"、"and"、"or" などの LogicalOperators を検証します。この対象に "not" は含まれません。"not" をカスタマイズするには、ValidateUnaryOperatorNode をオーバーライドしてください。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> ナビゲーション プロパティ ノードについて、このメソッドをオーバーライドします。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateQueryNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> 各クエリ ノードにアクセスする場合は、このメソッドをオーバーライドします。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateRangeVariable(Microsoft.Data.OData.Query.SemanticAst.RangeVariable,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、フィルター クエリに使用されるパラメーターを検証します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleEntityCastNode(Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> 単一のエンティティでキャストを検証する場合、このメソッドをオーバーライドします。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.Data.OData.Query.SingleValueFunctionCallNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、"length"、"years" などの関数の呼び出しを検証します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、プロパティ アクセサーを検証します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> このメソッドをオーバーライドして、Not 演算子を検証します。</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.Validate(System.Web.Http.OData.Query.ODataQueryOptions,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> 指定された ODataQueryOption が AllowedQueryOptions の値に従っているかどうかを検証します。既定では、4 つの演算子すべてを許可しています。 </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.Validate(System.Web.Http.OData.Query.OrderByQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.Validate(System.Web.Http.OData.Query.SkipQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Query.Validators.TopQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.Validate(System.Web.Http.OData.Query.TopQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Routing.ActionPathSegment">
      <summary>アクションの呼び出しを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">呼び出されるアクション。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionName">アクションの名前。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.Action">
      <summary>呼び出されるアクションを取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmFunctionImport" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.ActionName">
      <summary>アクションの名前を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.BatchPathSegment">
      <summary>$batch セグメントを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>   このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.BatchPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.CastPathSegment">
      <summary>キャストを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="castType">キャストの型。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="castTypeName">キャストの型の名前。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastType">
      <summary>キャストの型を取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastTypeName">
      <summary>  キャストの型の名前を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>このセグメントの EDM の種類を取得します。</summary>
      <returns>  このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.DefaultODataPathHandler">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> として OData パスを解析し、<see cref="T:System.Web.Http.OData.Routing.ODataPath" /> を OData リンクに変換します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.DefaultODataPathHandler" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> のインスタンスを OData リンクに変換します。</summary>
      <returns> 生成される OData リンク。</returns>
      <param name="path">リンクに変換する OData パス。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> 指定された OData パスを、パスに対して設定された EDM の種類とエンティティ セットに関する追加情報を含む <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> として解析します。</summary>
      <returns>パスの解析済み表現。パスがモデルと一致しない場合は null。</returns>
      <param name="model">パスの解析に使用するモデル。</param>
      <param name="odataPath">解析する OData パス。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> コレクションの後にある OData パス セグメントを解析します。</summary>
      <returns>セグメントの解析された表現。</returns>
      <param name="model">パスの解析に使用するモデル。</param>
      <param name="previous">前のパス セグメント。</param>
      <param name="previousEdmType">前のセグメントまでの OData パスの EDM の種類。</param>
      <param name="segment">解析するセグメントの値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtComplex(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> 複合型セグメントの後にある OData パス セグメントを解析します。</summary>
      <returns>セグメントの解析された表現。</returns>
      <param name="model">パスの解析に使用するモデル。</param>
      <param name="previous">前のパス セグメント。</param>
      <param name="previousEdmType">前のセグメントまでの OData パスの EDM の種類。</param>
      <param name="segment">解析するセグメントの値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntity(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> エンティティの後にある OData パス セグメントを解析します。</summary>
      <returns>セグメントの解析された表現。</returns>
      <param name="model">パスの解析に使用するモデル。</param>
      <param name="previous">前のパス セグメント。</param>
      <param name="previousEdmType">前のセグメントまでの OData パスの EDM の種類。</param>
      <param name="segment">解析するセグメントの値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntityCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> エンティティ コレクションの後にある OData パス セグメントを解析します。</summary>
      <returns>セグメントの解析された表現。</returns>
      <param name="model">パスの解析に使用するモデル。</param>
      <param name="previous">前のパス セグメント。</param>
      <param name="previousEdmType">前のセグメントまでの OData パスの EDM の種類。</param>
      <param name="segment">解析するセグメントの値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtPrimitiveProperty(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> プリミティブ プロパティの後にある OData パス セグメントを解析します。</summary>
      <returns>セグメントの解析された表現。</returns>
      <param name="model">パスの解析に使用するモデル。</param>
      <param name="previous">前のパス セグメント。</param>
      <param name="previousEdmType">前のセグメントまでの OData パスの EDM の種類。</param>
      <param name="segment">解析するセグメントの値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseEntrySegment(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> サービスのベース URI の後にある、最初の OData セグメントを解析します。</summary>
      <returns>セグメントの解析された表現。</returns>
      <param name="model">パスの解析に使用するモデル。</param>
      <param name="segment">解析するセグメントの値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseNextSegment(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> 次の OData パス セグメントを解析します。</summary>
      <returns>セグメントの解析された表現。</returns>
      <param name="model">パスの解析に使用するモデル。</param>
      <param name="previous">前のパス セグメント。</param>
      <param name="previousEdmType">前のセグメントまでの OData パスの EDM の種類。</param>
      <param name="segment">解析するセグメントの値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseSegments(System.String)">
      <summary> OData パスをセグメントに解析します。</summary>
      <returns>OData パスのセグメント。</returns>
      <param name="odataPath">OData パス。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.EntitySetPathSegment">
      <summary>エンティティ セットを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="entitySet">アクセスされるエンティティ セット。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySet">
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySetName">
      <summary>エンティティ セットの名前を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>   このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>   このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.IODataPathHandler">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> として OData パスを解析し、<see cref="T:System.Web.Http.OData.Routing.ODataPath" /> を OData リンクに変換する機能を公開します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> のインスタンスを OData リンクに変換します。</summary>
      <returns>生成される OData リンク。</returns>
      <param name="path">リンクに変換する OData パス。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> 指定された OData パスを、パスに対して設定された EDM の種類とエンティティ セットに関する追加情報を含む <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> として解析します。</summary>
      <returns>URI の解析済み表現。URI がモデルと一致しない場合は null。</returns>
      <param name="model">パスの解析に使用するモデル。</param>
      <param name="odataPath">解析する OData パス。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.KeyValuePathSegment">
      <summary>キーによるエンティティ コレクションへのインデックス作成を表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.KeyValuePathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションへのインデックス作成に使用するキー値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.Value">
      <summary>コレクションへのインデックス作成に使用するキー値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.LinksPathSegment">
      <summary>$links セグメントを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>  このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.LinksPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.MetadataPathSegment">
      <summary>$metadata セグメントを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>  このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.MetadataPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.NavigationPathSegment">
      <summary>ナビゲーションを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="navigationProperty">このセグメントでアクセスされているナビゲーション プロパティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationProperty">
      <summary>このセグメントでアクセスされているナビゲーション プロパティを取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationPropertyName">
      <summary>ナビゲーション プロパティの名前を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataActionSelector">
      <summary> OData 要求のアクションを選択するために、サーバーの OData ルーティング規約を使用する <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.#ctor(System.Web.Http.Controllers.IHttpActionSelector)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataActionSelector" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerSelector">呼び出す内部コントローラー セレクター。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> セレクターが選択できるすべての <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> の、アクション文字列によってキーが入力されたマップを返します。これは、コントローラーで使用できるすべてのアクションを検出するために、主に <see cref="T:System.Web.Http.Description.IApiExplorer" /> によって呼び出されます。</summary>
      <returns> セレクターが選択できる <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> のマップ。正しく定義された <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> のマッピングがセレクターにない場合は null。</returns>
      <param name="controllerDescriptor">コントローラー記述子。</param>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" /> のアクションを選択します。</summary>
      <returns> 選択されたアクション。 </returns>
      <param name="controllerContext">コントローラー コンテキスト。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPath">
      <summary>パスの EDM 型とエンティティ セットに関する追加情報を含む、OData パスのオブジェクトの表現を提供します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="segments">パスのパス セグメント。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="segments">パスのパス セグメント。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EdmType">
      <summary>パスの EDM 型を取得または設定します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmType" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EntitySet">
      <summary>パスのエンティティ セットを取得または設定します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.PathTemplate">
      <summary>パスのセグメントの型を記述するパス テンプレートを取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.Segments">
      <summary>OData パスのパス セグメントを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.ToString">
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute">
      <summary> アクション パラメーターとして <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> のインスタンスのバインドに使用される <see cref="T:System.Web.Http.ParameterBindingAttribute" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> パラメーター バインディングを取得します。</summary>
      <returns> パラメーター バインディング。 </returns>
      <param name="parameter">パラメーターの説明。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint">
      <summary> OData パスとのみ一致する <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.#ctor(System.Web.Http.OData.Routing.IODataPathHandler,Microsoft.Data.Edm.IEdmModel,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pathHandler">解析に使用する OData パス ハンドラー。</param>
      <param name="model">パスの解析に使用する EDM モデル。</param>
      <param name="routeName">この制約が関連付けられるルートの名前。</param>
      <param name="routingConventions">コントローラー名の選択に使用する OData ルーティング規約。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.EdmModel">
      <summary> パスの解析に使用する EDM モデルを取得します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary> このインスタンスが指定したルートと同じかどうかを判断します。</summary>
      <returns> このインスタンスが、指定されたルートと等しい場合は true。それ以外の場合は false。</returns>
      <param name="request">要求。</param>
      <param name="route">比較するルート。</param>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="values">パラメーター値の一覧。</param>
      <param name="routeDirection">ルート方向。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.PathHandler">
      <summary> 解析に使用する OData パス ハンドラーを取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RouteName">
      <summary> この制約が関連付けられるルートの名前を取得します。</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RoutingConventions">
      <summary> コントローラー名の選択に使用する OData ルーティング規約を取得します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.SelectControllerName(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> 要求のディスパッチ先のコントローラー名を選択します。</summary>
      <returns>ディスパッチ先のコントローラーの名前。名前に解決できない場合は null。</returns>
      <param name="path">要求の OData パス。</param>
      <param name="request">要求。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathSegment">
      <summary>パスの EDM 型とエンティティ セットに関する追加情報を含む、OData パス セグメントのオブジェクトの表現を指定します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRouteConstants"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ConstraintName"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Controller"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.NavigationProperty"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPath"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPathTemplate"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.RelatedKey"></member>
    <member name="T:System.Web.Http.OData.Routing.ODataSegmentKinds">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装に対してセグメントの種類の値を提供します。</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Batch"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Cast"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.EntitySet"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Links"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Metadata"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Navigation"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Property"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.ServiceBase"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Unresolved"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Value"></member>
    <member name="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment">
      <summary>プロパティ アクセスを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.Data.Edm.IEdmProperty)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property">このセグメントでアクセスされているプロパティ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyName">プロパティの名前。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.Property">
      <summary>このセグメントでアクセスされているプロパティを取得します。</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.PropertyName">
      <summary>プロパティの名前を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.UnresolvedPathSegment">
      <summary>解決できないセグメントを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.UnresolvedPathSegment" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="segmentValue">未解決のセグメント値。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <returns>前のパス セグメントの EDM の種類。</returns>
      <param name="previousEdmType">このセグメントの EDM の種類を取得します。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentValue">
      <summary>未解決のセグメント値を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ValuePathSegment">
      <summary>$value セグメントを表す <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>このセグメントの EDM の種類を取得します。</summary>
      <returns>このセグメントの EDM の種類。</returns>
      <param name="previousEdmType">前のパス セグメントの EDM の種類。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>このセグメントのエンティティ セットを取得します。</summary>
      <returns>このセグメントのエンティティ セット。</returns>
      <param name="previousEntitySet">前のパス セグメントのエンティティ セット。</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ValuePathSegment.SegmentKind">
      <summary>現在のセグメントのセグメント種類を取得します。</summary>
      <returns>
        <see cref="T:System.String" /> を返します。</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.ToString">
      <summary>このインスタンスを表す <see cref="T:System.String" /> を返します。</summary>
      <returns>このインスタンスを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention">
      <summary> アクションの呼び出しを処理する <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> OData 要求のアクションを選択します。</summary>
      <returns>要求がこの規則によって処理されていない場合は null。それ以外の場合は、選択されたアクションの名前。 </returns>
      <param name="odataPath">OData パス。</param>
      <param name="controllerContext">コントローラー コンテキスト。</param>
      <param name="actionMap">アクション マップ。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention">
      <summary> キーごとにエンティティの操作を処理する <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> OData 要求のアクションを選択します。</summary>
      <returns>要求がこの規則によって処理されていない場合は null。それ以外の場合は、選択されたアクションの名前。 </returns>
      <param name="odataPath">OData パス。</param>
      <param name="controllerContext">コントローラー コンテキスト。</param>
      <param name="actionMap">アクション マップ。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention">
      <summary> エンティティ セットを処理する <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> OData 要求のアクションを選択します。</summary>
      <returns>要求がこの規則によって処理されていない場合は null。それ以外の場合は、選択されたアクションの名前。</returns>
      <param name="odataPath">OData パス。</param>
      <param name="controllerContext">コントローラー コンテキスト。</param>
      <param name="actionMap">アクション マップ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> OData 要求のコントローラーを選択します。</summary>
      <returns>要求がこの規則によって処理されていない場合は null。それ以外の場合は、選択されたコントローラーの名前。 </returns>
      <param name="odataPath">OData パス。</param>
      <param name="request">要求。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention">
      <summary> OData 要求のコントローラーとアクションを選択するための抽象型を提供します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> OData 要求のアクションを選択します。</summary>
      <returns>要求がこの規則によって処理されていない場合は null。それ以外の場合は、選択されたアクションの名前。</returns>
      <param name="odataPath">OData パス。</param>
      <param name="controllerContext">コントローラー コンテキスト。</param>
      <param name="actionMap">アクション マップ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> OData 要求のコントローラーを選択します。</summary>
      <returns>要求がこの規則によって処理されていない場合は null。それ以外の場合は、選択されたコントローラーの名前。</returns>
      <param name="odataPath">OData パス。</param>
      <param name="request">要求。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention">
      <summary> リンク操作を処理する <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> アクションを選択します。</summary>
      <param name="odataPath">OData パス。</param>
      <param name="controllerContext">コントローラー コンテキスト。</param>
      <param name="actionMap">アクション マップ。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention">
      <summary> OData メタデータ要求を処理する <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> OData 要求のアクションを選択します。</summary>
      <returns>要求がこの規則によって処理されていない場合は null。それ以外の場合は、選択されたアクションの名前。</returns>
      <param name="odataPath">OData パス。</param>
      <param name="controllerContext">コントローラー コンテキスト。</param>
      <param name="actionMap">アクション マップ。</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> OData 要求のコントローラーを選択します。</summary>
      <returns>要求がこの規則によって処理されていない場合は null。それ以外の場合は、選択されたコントローラーの名前。 </returns>
      <param name="odataPath">OData パス。</param>
      <param name="request">要求。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention">
      <summary> ナビゲーション プロパティを処理する <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> アクションを選択します。</summary>
      <param name="odataPath">OData パス。</param>
      <param name="controllerContext">コントローラー コンテキスト。</param>
      <param name="actionMap">アクション マップ。</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions">
      <summary> ルーティング規約の作成に使用するヘルパー メソッドを指定します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions.CreateDefault">
      <summary> 既定の OData ルーティング規約の変更可能なコレクションを作成します。</summary>
      <returns>既定の OData ルーティング規約の変更可能なコレクション。</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention">
      <summary> HandleUnmappedRequest というアクションが存在する場合に、そのアクションを常に選択する <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> の実装。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> アクションを選択します。</summary>
      <param name="odataPath">OData パス。</param>
      <param name="controllerContext">コントローラー コンテキスト。</param>
      <param name="actionMap">アクション マップ。</param>
    </member>
  </members>
</doc>